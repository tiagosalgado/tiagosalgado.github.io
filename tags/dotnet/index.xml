<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnet on tiagosalgado.com</title>
    <link>https://blog.tiagosalgado.com/tags/dotnet/</link>
    <description>Recent content in Dotnet on tiagosalgado.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 17 Sep 2009 13:14:23 +0000</lastBuildDate>
    <atom:link href="https://blog.tiagosalgado.com/tags/dotnet/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Free AJAX and Silverlight Automated Testing by Telerik</title>
      <link>https://blog.tiagosalgado.com/2009/09/17/free-ajax-and-silverlight-automated-testing-by-telerik/</link>
      <pubDate>Thu, 17 Sep 2009 13:14:23 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2009/09/17/free-ajax-and-silverlight-automated-testing-by-telerik/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.telerik.com/products/webaii-testing-framework.aspx&#34; target=&#34;_blank&#34;&gt;WebAii Testing Framework&lt;/a&gt; helps developers build automated unit tests, functional tests and end to end scenario tests for both AJAX- and Silverlight-powered applications. From automating complex UI actions, waiting on DOM changes to imitating the complete list of UI XAML elements in Silverlight – it’s all in here for free!&lt;/p&gt;

&lt;p&gt;Website: &lt;a href=&#34;http://www.telerik.com/products/webaii-testing-framework.aspx&#34; target=&#34;_blank&#34;&gt;WebAii Testing Framework&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Collection was modified; enumeration operation may not execute</title>
      <link>https://blog.tiagosalgado.com/2009/06/17/collection-was-modified-enumeration-operation-may-not-execute/</link>
      <pubDate>Wed, 17 Jun 2009 12:38:34 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2009/06/17/collection-was-modified-enumeration-operation-may-not-execute/</guid>
      <description>&lt;p&gt;Para remover um item de uma colecção, nada mais do que&lt;/p&gt;

&lt;p&gt;List&lt;string&gt; s = new List&lt;string&gt;() { &amp;#8220;1&amp;#8221;, &amp;#8220;2&amp;#8221; };&lt;/p&gt;

&lt;p&gt;s.Remove(&amp;#8220;1&amp;#8221;);&lt;/p&gt;

&lt;p&gt;Mas quando usamos a colecção dentro de um ciclo e queremos remover o item que está carregado actualmente, podemos ser surpreendidos com uma excepção do tipo &amp;#8220;Collection was modified; enumeration operation may not execute&amp;#8221;.&lt;/p&gt;

&lt;p&gt;List&lt;string&gt; s = new List&lt;string&gt;() { &amp;#8220;1&amp;#8221;, &amp;#8220;2&amp;#8221; };&lt;/p&gt;

&lt;p&gt;foreach (string ss in s)&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;s.Remove(ss);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Para contornar este erro, e eliminar todos os items que pretendemos durante o ciclo, basta a seguinte alteração ao código&lt;/p&gt;

&lt;p&gt;List&lt;string&gt; s = new List&lt;string&gt;() { &amp;#8220;1&amp;#8221;, &amp;#8220;2&amp;#8221; };&lt;/p&gt;

&lt;p&gt;foreach (string ss in &lt;strong&gt;new List&lt;string&gt;(s)&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;s.Remove(ss);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blog sobre VB.NET em Portugues</title>
      <link>https://blog.tiagosalgado.com/2009/04/17/blog-sobre-vbnet-em-portugues/</link>
      <pubDate>Fri, 17 Apr 2009 19:00:16 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2009/04/17/blog-sobre-vbnet-em-portugues/</guid>
      <description>&lt;p&gt;Não é para divulgar um blog, pois já o tenho há muito tempo no blogroll, mas sim para dar os meus parabéns ao &lt;a href=&#34;http://vbtuga.blogspot.com/&#34; target=&#34;_blank&#34;&gt;Jorge Paulino&lt;/a&gt; pelo trabalho que tem feito no seu blog.&lt;/p&gt;

&lt;p&gt;A referência ao blog dele está na edição de hoje do &lt;a href=&#34;http://www.microsoft.com/portugal/msdn/&#34; target=&#34;_blank&#34;&gt;MSDN Flash&lt;/a&gt; e é sem dúvida uma reconhecimento a esse trabalho a que me refiro.&lt;/p&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://vbtuga.blogspot.com/&#34; target=&#34;_blank&#34;&gt;&lt;img style=&#34;border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;&#34; title=&#34;image&#34; border=&#34;0&#34; alt=&#34;image&#34; src=&#34;http://oito.files.wordpress.com/2009/04/image.png&#34; width=&#34;588&#34; height=&#34;149&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Classes Pair e Triplet</title>
      <link>https://blog.tiagosalgado.com/2008/09/03/classes-pair-e-triplet/</link>
      <pubDate>Wed, 03 Sep 2008 23:18:40 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2008/09/03/classes-pair-e-triplet/</guid>
      <description>&lt;p&gt;Muito rápidamente, as classes &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.web.ui.pair.aspx&#34; target=&#34;_blank&#34;&gt;Pair&lt;/a&gt; e &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.web.ui.triplet.aspx&#34; target=&#34;_blank&#34;&gt;Triplet&lt;/a&gt; servem para guardar objectos que possam estar relaccionados. A classe &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.web.ui.pair.aspx&#34; target=&#34;_blank&#34;&gt;Pair&lt;/a&gt; é usada normalmente para guardar as colecções do &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.web.ui.control.viewstate.aspx&#34; target=&#34;_blank&#34;&gt;ViewState&lt;/a&gt; e do &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.web.ui.pagestatepersister.controlstate.aspx&#34; target=&#34;_blank&#34;&gt;ControlState&lt;/a&gt;, usando a propriedade &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.web.ui.pair.first.aspx&#34; target=&#34;_blank&#34;&gt;First&lt;/a&gt; e a proriedade &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.web.ui.pair.second.aspx&#34; target=&#34;_blank&#34;&gt;Second&lt;/a&gt; respectivamente.&lt;/p&gt;

&lt;p&gt;Podemos usar a classe &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.web.ui.triplet.aspx&#34; target=&#34;_blank&#34;&gt;Triplet&lt;/a&gt; para guardar as cores primárias por exemplo.&lt;/p&gt;

&lt;pre&gt;Triplet cores = &lt;span style=&#34;color:#0000ff;&#34;&gt;new&lt;/span&gt; Triplet(&#34;&lt;span style=&#34;color:#8b0000;&#34;&gt;Vermelho&lt;/span&gt;&#34;,&#34;&lt;span style=&#34;color:#8b0000;&#34;&gt;Azul&lt;/span&gt;&#34;,&#34;&lt;span style=&#34;color:#8b0000;&#34;&gt;Amarelo&lt;/span&gt;&#34;);&lt;/pre&gt;

&lt;p&gt;Para fazer o output de ambas as cores deveremos ter algo assim:&lt;/p&gt;

&lt;pre&gt;lblCoresPrimarias.Text = String.Format(&#34;&lt;span style=&#34;color:#8b0000;&#34;&gt;As cores primárias são &lt;/span&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;span style=&#34;color:#8b0000;&#34;&gt;o {0}, o {1} e o {2}.&lt;/span&gt;&#34;, cores.First, cores.Second, cores.Third);&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>