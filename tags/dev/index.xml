<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on tiagosalgado.com</title>
    <link>https://blog.tiagosalgado.com/tags/dev/</link>
    <description>Recent content in Dev on tiagosalgado.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 02 Sep 2014 12:34:25 +0000</lastBuildDate>
    <atom:link href="https://blog.tiagosalgado.com/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Chrome dev tools dark theme</title>
      <link>https://blog.tiagosalgado.com/2014/09/02/chrome-dev-tools-dark-theme/</link>
      <pubDate>Tue, 02 Sep 2014 12:34:25 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2014/09/02/chrome-dev-tools-dark-theme/</guid>
      <description>&lt;p&gt;After seeing Iris Classon post about how to &lt;a href=&#34;http://irisclasson.com/2014/09/01/styling-chrome-dev-tools/&#34; target=&#34;_blank&#34;&gt;style Chrome Dev Tools&lt;/a&gt;, I knew I needed to give it a try.&lt;/p&gt;

&lt;p&gt;I love Visual Studio dark theme, and having the same in Chrome is a joy for my eyes. So I&amp;#8217;ve done it, and I&amp;#8217;m happy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://res.cloudinary.com/tiagosalgado/image/upload/v1473718824/chrome-dev-tools-dark-theme_gbrkf8.png&#34;&gt;&lt;img class=&#34;aligncenter wp-image-1425 &#34; src=&#34;https://res.cloudinary.com/tiagosalgado/image/upload/v1473718824/chrome-dev-tools-dark-theme_gbrkf8.png&#34; alt=&#34;chrome-dev-tools-dark-theme&#34; width=&#34;399&#34; height=&#34;242&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add the extension &lt;a href=&#34;https://chrome.google.com/webstore/detail/devtools-theme-zero-dark/bomhdjeadceaggdgfoefmpeafkjhegbo&#34; target=&#34;_blank&#34;&gt;Zero Dark Matrix&lt;/a&gt; from Chrome Web store&lt;/li&gt;
&lt;li&gt;Enable the Developer experiments (chrome://flags &amp;gt; Enable Developer Tools experiments) and click &amp;#8220;Relaunch Now&amp;#8221; at the bottom&lt;/li&gt;
&lt;li&gt;Go to developer tools settings &amp;gt; Experiments &amp;gt; and tick Allow custom UI themes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks &lt;a href=&#34;http://irisclasson.com/&#34;&gt;Iris&lt;/a&gt; for the tip.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Build 2013 &amp;#8211; Sessions available</title>
      <link>https://blog.tiagosalgado.com/2013/07/01/build-2013-sessions-available/</link>
      <pubDate>Mon, 01 Jul 2013 08:36:44 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2013/07/01/build-2013-sessions-available/</guid>
      <description>&lt;p&gt;Build 2013 is over, and now is time to see some sessions we couldn&amp;#8217;t watch live.&lt;/p&gt;

&lt;p&gt;All sessions are now available on Channel9 to download and watch when you want.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://channel9.msdn.com/Events/Build/2013?direction=asc#tab_sortBy_day&#34; target=&#34;_blank&#34;&gt;Channel9 &amp;#8211; Build 2013 Sessions List&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Frontend Development bookmarks</title>
      <link>https://blog.tiagosalgado.com/2013/06/30/frontend-development-bookmarks/</link>
      <pubDate>Sun, 30 Jun 2013 23:47:24 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2013/06/30/frontend-development-bookmarks/</guid>
      <description>&lt;p&gt;A great and huge list of frontend development bookmarks list can be found &lt;a href=&#34;https://github.com/dypsilon/frontend-dev-bookmarks&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Koding &amp;#8211; A new way for developers to work</title>
      <link>https://blog.tiagosalgado.com/2012/08/07/koding-a-new-way-for-developers-to-work/</link>
      <pubDate>Tue, 07 Aug 2012 22:46:54 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2012/08/07/koding-a-new-way-for-developers-to-work/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://koding.com&#34; target=&#34;_blank&#34;&gt;Koding&lt;/a&gt; is a Cloud Development Environment, an Online Code Editor, a Cloud Hosting, have Web based access to file-system, ftp, and much more.&lt;/p&gt;

&lt;p&gt;At this moment, you can only register with an invite. The invites are given by &lt;a href=&#34;http://koding.com&#34; target=&#34;_blank&#34;&gt;Koding.com&lt;/a&gt; on &lt;a href=&#34;https://twitter.com/Koding&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt;, but I have 3 to send by this moment.&lt;/p&gt;

&lt;p&gt;If you want one, please leave a comment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update 2012-08-08 at 11:38:&lt;/strong&gt; All invites sent. When i have more i notice here.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub para Windows</title>
      <link>https://blog.tiagosalgado.com/2012/05/22/github-para-windows/</link>
      <pubDate>Tue, 22 May 2012 08:59:24 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2012/05/22/github-para-windows/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;alignnone&#34; title=&#34;github for windows&#34; src=&#34;http://haacked.com/images/haacked_com/Windows-Live-Writer/Introducing-GitHub-For-Windows_1293C/gh4w-app_thumb.png&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;332&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Após alguns meses de desenvolvimento, está disponivel o GitHub para Windows.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://haacked.com/archive/2012/05/21/introducing-github-for-windows.aspx&#34; target=&#34;_blank&#34;&gt;Introduction GitHub for Windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://windows.github.com/&#34; target=&#34;_blank&#34;&gt;Download GitHub for Windows&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Instaladores Habilitados de TDT por Código Postal (JSON &#43; C#)</title>
      <link>https://blog.tiagosalgado.com/2011/04/01/instaladores-habilitados-de-tdt-por-cdigo-postal-json-c/</link>
      <pubDate>Fri, 01 Apr 2011 18:30:00 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2011/04/01/instaladores-habilitados-de-tdt-por-cdigo-postal-json-c/</guid>
      <description>&lt;p&gt;Pois é, a TDT já anda aí, e por razões que não interessam, precisei de retornar todos os instaladores por cada código postal, cuja PT indica como sendo um instalador habilitado.&lt;/p&gt;

&lt;p&gt;Para tal, fiz uma pequena aplicação que enviada um pedido com o código postal, e interpretava o resultado retornado em JSON.&lt;/p&gt;

&lt;p&gt;Primeiro tive que criar um ficheiro de texto com todos os códigos postais. Podem fazer download do que usei &lt;a href=&#34;http://www.box.net/shared/hn52rj4h38&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O código poderá não ser o melhor, mas fez o que pretendia e não precisei de me chatear mais com o assunto.&lt;/p&gt;

&lt;div style=&#34;padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px&#34; id=&#34;scid:812469c5-0cb0-4c63-8c15-c81123a09de7:d60490cc-6ec5-4f42-a36b-2621f06e335e&#34; class=&#34;wlWriterEditableSmartContent&#34;&gt;
  &lt;pre name=&#34;code&#34; class=&#34;c&#34;&gt;using System;
using System.Collections.Generic;
using System.Net;
using System.IO;
using System.Web.Script.Serialization;

namespace WebApplication1
{
    public class CPs
    {
        public string cp4 { get; set; }
        public string cp3 { get; set; }
    }

    public partial class _Default : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            GetData();
        }

        private void GetData()
        {
            List&amp;lt;CPs&amp;gt; cps = new List&amp;lt;CPs&amp;gt;();
            
            TextReader t = new StreamReader(@&#34;C:cps.txt&#34;);
            string line = &#34;&#34;;
            t.ReadLine();
            while (t.Peek() &amp;gt; 0)
            {
                line = t.ReadLine();
                cps.Add(new CPs() { cp4 = line.Split(&#39;-&#39;)[0].ToString(), cp3 = line.Split(&#39;-&#39;)[1].ToString() });
            }

            HttpWebRequest request = null;

            foreach (CPs cp in cps)
            {
                try
                {
                    request = (HttpWebRequest)HttpWebRequest.Create(@&#34;http://tdt.telecom.pt/handlers/installerSearch.ashx?cp4=&#34; + cp.cp4 + &#34;&amp;cp3=&#34; + cp.cp3);
                    request.ContentType = &#34;application/json; charset=utf-8&#34;;
                    request.Accept = &#34;application/json, text/javascript, */*&#34;;
                    WebResponse response = request.GetResponse();

                    Stream stream = response.GetResponseStream();
                    string json = &#34;&#34;;

                    using (StreamReader reader = new StreamReader(stream))
                    {
                        while (!reader.EndOfStream)
                        {
                            json += reader.ReadLine();
                        }
                    }

                    JavaScriptSerializer serializer = new JavaScriptSerializer();
                    Dictionary&amp;lt;string, object&amp;gt; x = (Dictionary&amp;lt;string, object&amp;gt;)serializer.DeserializeObject(json);

                    if (x.Count &amp;gt; 0)
                        Response.Write(cp.cp4 + &#34;;&#34; + cp.cp3 + &#34;;&#34; + x[&#34;name&#34;].ToString() + &#34;;&#34; + x[&#34;phoneNumber1&#34;].ToString() + &#34;;&#34; + x[&#34;phoneNumber2&#34;].ToString() + &#34;&amp;lt;br /&amp;gt;&#34;);


                }
                catch (Exception)
                {

                }

            }
        }

   
    }

    
}&lt;/pre&gt;
&lt;/div&gt;

&lt;!-- Start block. Created with Code4Blog for Microsoft Visual Studio 2010. Copyright (c)2010 Vitaly Zayko http://zayko.net --&gt;

&lt;p&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a31515&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a31515&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #a5c25c&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #cc7832&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;span style=&#34;color: #ffc66d&#34;&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;&lt;!-- End block --&gt;&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Utilizar a API do bit.ly para gerar um url curto em C#</title>
      <link>https://blog.tiagosalgado.com/2010/04/24/utilizar-a-api-do-bit-ly-para-gerar-um-url-curto-em-c/</link>
      <pubDate>Sat, 24 Apr 2010 00:33:13 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2010/04/24/utilizar-a-api-do-bit-ly-para-gerar-um-url-curto-em-c/</guid>
      <description>&lt;p&gt;Hoje andei a dar uma olhadela à API do serviço bit.ly. Para utilizarmos basta mesmo criar uma conta, e com a key que gera para utilizarmos a API rapidamente fazemos qualquer brincadeira.&lt;/p&gt;

&lt;p&gt;Segue um exemplo rápido de como gerar um link curto a partir da URL inserida.&lt;/p&gt;

&lt;p style=&#34;background-color: white;&#34;&gt;
  &lt;code style=&#34;font-size: 12px;&#34;&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;string &amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;username &amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;= &amp;lt;/span&gt;&amp;lt;span style=&#34;color: darkred;&#34;&gt;&#34;username&#34;&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;;&amp;lt;br /&gt;
&amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;string &amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;api &amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;= &amp;lt;/span&gt;&amp;lt;span style=&#34;color: darkred;&#34;&gt;&#34;your_api_key&#34;&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;;&amp;lt;br /&gt;
&amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;using &amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;(&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;WebClient w &amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;= new &amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;WebClient&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;())&amp;lt;br /&gt;
&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;{&amp;lt;br /&gt;
&amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;string &amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;LongUrl &amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;= &amp;lt;/span&gt;&amp;lt;span style=&#34;color: darkred;&#34;&gt;&#34;http://blog.tiagosalgado.com&#34;&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;;&amp;lt;br /&gt;
&amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;string &amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;bitLyUrl &amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;=string&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;.Format&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;(&amp;lt;/span&gt;&amp;lt;span style=&#34;color: darkred;&#34;&gt;&#34;http://api.bit.ly/v3/shorten?login={0}&amp;apiKey={1}&amp;uri={2}&amp;format=txt&#34;&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;,&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;username&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;,&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;api&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;,&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;LongUrl&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;);&amp;lt;br /&gt;
&amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;string &amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;ShortUrl &amp;lt;/span&gt;&amp;lt;span style=&#34;color: blue;&#34;&gt;= &amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;w.DownloadString&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;(&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;bitLyUrl&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;);&amp;lt;br /&gt;
&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;Console.Write&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;(&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;ShortUrl&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;);&amp;lt;br /&gt;
&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;Console.Read&amp;lt;/span&gt;&amp;lt;span style=&#34;color: gray;&#34;&gt;();&amp;lt;br /&gt;
&amp;lt;/span&gt;&amp;lt;span style=&#34;color: black;&#34;&gt;}&amp;lt;/span&gt;&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;E temos algo como isto:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://img691.imageshack.us/img691/154/outputbitlyapp.png&#34; alt=&#34;&#34; width=&#34;677&#34; height=&#34;342&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Download do Projecto&#34; href=&#34;http://www.box.net/shared/pr65xpnjhe&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://e3.boxcdn.net/resources/a5y417x8pf/thumbs/27x30/application/zip.gif&#34; border=&#34;0&#34; alt=&#34;File icon&#34; width=&#34;24&#34; height=&#34;24&#34; align=&#34;absMiddle&#34; /&gt;bitLy_get_shorturl_csharp.zip&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>T-SQL: CSV para Linhas (UDF e XML)</title>
      <link>https://blog.tiagosalgado.com/2010/04/10/t-sql-csv-para-linhas-udf-e-xml/</link>
      <pubDate>Sat, 10 Apr 2010 18:19:57 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2010/04/10/t-sql-csv-para-linhas-udf-e-xml/</guid>
      <description>&lt;p&gt;Esta semana precisei de fazer exactamente o que o titulo do post indica, ou seja, retornar todas as linhas de uma tabela mas ao mesmo tempo separar os valores numa das colunas em cada linha.&lt;/p&gt;

&lt;p&gt;Para testar, criei a seguinte tabela:&lt;/p&gt;

&lt;div class=&#34;csharpcode&#34;&gt;
  &lt;pre class=&#34;alt&#34;&gt;&lt;span class=&#34;kwrd&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;kwrd&#34;&gt;TABLE&lt;/span&gt; [dbo].[Agentes](&lt;/pre&gt;
  
  &lt;pre&gt;    [Codigo] [&lt;span class=&#34;kwrd&#34;&gt;varchar&lt;/span&gt;](50) &lt;span class=&#34;kwrd&#34;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;    [Nome] [&lt;span class=&#34;kwrd&#34;&gt;varchar&lt;/span&gt;](50) &lt;span class=&#34;kwrd&#34;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;
  
  &lt;pre&gt;    [Emails] [&lt;span class=&#34;kwrd&#34;&gt;varchar&lt;/span&gt;](100) &lt;span class=&#34;kwrd&#34;&gt;NULL&lt;/span&gt;&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;) &lt;/pre&gt;
&lt;/div&gt;&lt;/p&gt; 

Inseri alguns dados com o mesmo formato da tabela real que iria depois utilizar:

&lt;div class=&#34;csharpcode&#34;&gt;
  &lt;pre class=&#34;alt&#34;&gt;INSERT &lt;span class=&#34;kwrd&#34;&gt;INTO&lt;/span&gt; Agentes &lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;kwrd&#34;&gt;VALUES&lt;/span&gt;(&lt;span class=&#34;str&#34;&gt;&#39;C12345&#39;&lt;/span&gt;,&lt;span class=&#34;str&#34;&gt;&#39;Agente 1&#39;&lt;/span&gt;,&lt;span class=&#34;str&#34;&gt;&#39;agente1@xpto.pt;agente1.loja@xpto.pt&#39;&lt;/span&gt;)&lt;/pre&gt;
  
  &lt;pre&gt;INSERT &lt;span class=&#34;kwrd&#34;&gt;INTO&lt;/span&gt; Agentes &lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;kwrd&#34;&gt;VALUES&lt;/span&gt;(&lt;span class=&#34;str&#34;&gt;&#39;C12346&#39;&lt;/span&gt;,&lt;span class=&#34;str&#34;&gt;&#39;Agente 2&#39;&lt;/span&gt;,&lt;span class=&#34;str&#34;&gt;&#39;agente2@xpto.pt;agente2.loja@xpto.pt&#39;&lt;/span&gt;)&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Como já podem perceber, o campo “Emails” precisa de ser retornado com apenas um email, ou seja, preciso de passar uma listagem como esta&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://img256.imageshack.us/img256/1892/select1.png&#34; width=&#34;362&#34; height=&#34;66&#34; /&gt;&lt;/p&gt;

&lt;p&gt;para uma como esta&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://img256.imageshack.us/img256/3897/select2c.png&#34; width=&#34;267&#34; height=&#34;98&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Para isso precisei de fazer uma função que me separasse cada um emails de forma a poder retornar um por cada linha.&lt;/p&gt;

&lt;div class=&#34;csharpcode&#34;&gt;
  &lt;pre class=&#34;alt&#34;&gt;&lt;p&gt;
  &lt;span class=&#34;kwrd&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;kwrd&#34;&gt;FUNCTION&lt;/span&gt; dbo.SplitEmails(@separador &lt;span class=&#34;kwrd&#34;&gt;char&lt;/span&gt;(1), &lt;br /&gt;@emails &lt;span class=&#34;kwrd&#34;&gt;varchar&lt;/span&gt;(512))
&lt;/p&gt;&lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;kwrd&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;kwrd&#34;&gt;table&lt;/span&gt;&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;&lt;span class=&#34;kwrd&#34;&gt;AS&lt;/span&gt;&lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;kwrd&#34;&gt;RETURN&lt;/span&gt; (&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;    &lt;span class=&#34;kwrd&#34;&gt;WITH&lt;/span&gt; Emails(pn, &lt;span class=&#34;kwrd&#34;&gt;start&lt;/span&gt;, stop) &lt;span class=&#34;kwrd&#34;&gt;AS&lt;/span&gt; (&lt;/pre&gt;
  
  &lt;pre&gt;      &lt;span class=&#34;kwrd&#34;&gt;SELECT&lt;/span&gt; 1, 1, CHARINDEX(@separador, @emails)&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;      &lt;span class=&#34;kwrd&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;kwrd&#34;&gt;ALL&lt;/span&gt;&lt;/pre&gt;
  
  &lt;pre&gt;      &lt;span class=&#34;kwrd&#34;&gt;SELECT&lt;/span&gt; pn + 1, stop + 1, CHARINDEX(@separador, @emails, &lt;/pre&gt;
  
  &lt;pre&gt;stop + 1)&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;      &lt;span class=&#34;kwrd&#34;&gt;FROM&lt;/span&gt; Emails&lt;/pre&gt;
  
  &lt;pre&gt;      &lt;span class=&#34;kwrd&#34;&gt;WHERE&lt;/span&gt; stop &amp;gt; 0&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;    )&lt;/pre&gt;
  
  &lt;pre&gt;    &lt;span class=&#34;kwrd&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;kwrd&#34;&gt;SUBSTRING&lt;/span&gt;(@emails, &lt;span class=&#34;kwrd&#34;&gt;start&lt;/span&gt;, &lt;span class=&#34;kwrd&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;kwrd&#34;&gt;WHEN&lt;/span&gt; stop &amp;gt; 0 &lt;span class=&#34;kwrd&#34;&gt;THEN&lt;/span&gt; &lt;/pre&gt;
  
  &lt;pre&gt;stop-&lt;span class=&#34;kwrd&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;kwrd&#34;&gt;ELSE&lt;/span&gt; 512 &lt;span class=&#34;kwrd&#34;&gt;END&lt;/span&gt;) &lt;span class=&#34;kwrd&#34;&gt;AS&lt;/span&gt; email&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;    &lt;span class=&#34;kwrd&#34;&gt;FROM&lt;/span&gt; Emails&lt;/pre&gt;
  
  &lt;pre&gt;  )&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Por fim, para ter a listagem com o formato pretendido, bastou fazer o CROSS APPLY com a minha tabela de agentes, e está o trabalho feito.&lt;/p&gt;

&lt;div class=&#34;csharpcode&#34;&gt;
  &lt;pre class=&#34;alt&#34;&gt;&lt;span class=&#34;kwrd&#34;&gt;SELECT&lt;/span&gt; a.Codigo,a.Nome,c.email &lt;span class=&#34;kwrd&#34;&gt;FROM&lt;/span&gt; Agentes a&lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;kwrd&#34;&gt;CROSS&lt;/span&gt; APPLY SplitEmails(&lt;span class=&#34;str&#34;&gt;&#39;;&#39;&lt;/span&gt;,a.Emails) c&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;http://img406.imageshack.us/img406/6914/select3.png&#34; width=&#34;271&#34; height=&#34;110&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Outra forma de retornar esta listagem, indicada pelo &lt;a href=&#34;http://twitter.com/CaioProiete&#34; target=&#34;_blank&#34;&gt;@Caio&lt;/a&gt;, era recorrendo ao XML e evitava assim criar uma função para fazer o split dos emails.&lt;/p&gt;

&lt;div class=&#34;csharpcode&#34;&gt;
  &lt;pre class=&#34;alt&#34;&gt;&lt;span class=&#34;kwrd&#34;&gt;WITH&lt;/span&gt; Consulta &lt;span class=&#34;kwrd&#34;&gt;AS&lt;/span&gt;&lt;/pre&gt;
  
  &lt;pre&gt;(&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;&lt;span class=&#34;kwrd&#34;&gt;SELECT&lt;/span&gt; Codigo, Nome,&lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;kwrd&#34;&gt;CAST&lt;/span&gt;(&lt;span class=&#34;str&#34;&gt;&#39;&amp;lt;email&amp;gt;&#39;&lt;/span&gt; + &lt;/pre&gt;
  
  &lt;pre&gt;REPLACE(Emails, &lt;span class=&#34;str&#34;&gt;&#39;;&#39;&lt;/span&gt;, &lt;span class=&#34;str&#34;&gt;&#39;&amp;lt;/email&amp;gt;&amp;lt;email&amp;gt;&#39;&lt;/span&gt;) + &lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;str&#34;&gt;&#39;&amp;lt;/email&amp;gt;&#39;&lt;/span&gt; &lt;span class=&#34;kwrd&#34;&gt;AS&lt;/span&gt; XML) &lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;kwrd&#34;&gt;AS&lt;/span&gt; EmailXml&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;&lt;span class=&#34;kwrd&#34;&gt;FROM&lt;/span&gt; Agentes&lt;/pre&gt;
  
  &lt;pre&gt;)&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;&amp;#160;&lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;kwrd&#34;&gt;SELECT&lt;/span&gt; Codigo, Nome,&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;    r.&lt;span class=&#34;kwrd&#34;&gt;value&lt;/span&gt;(&lt;span class=&#34;str&#34;&gt;&#39;.&#39;&lt;/span&gt;, &lt;span class=&#34;str&#34;&gt;&#39;varchar(255)&#39;&lt;/span&gt;) &lt;span class=&#34;kwrd&#34;&gt;AS&lt;/span&gt; Email&lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;kwrd&#34;&gt;FROM&lt;/span&gt;&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;    Consulta&lt;/pre&gt;
  
  &lt;pre&gt;&lt;span class=&#34;kwrd&#34;&gt;CROSS&lt;/span&gt; APPLY&lt;/pre&gt;
  
  &lt;pre class=&#34;alt&#34;&gt;    consulta.EmailXml.nodes(&lt;span class=&#34;str&#34;&gt;&#39;email&#39;&lt;/span&gt;) &lt;span class=&#34;kwrd&#34;&gt;AS&lt;/span&gt; x(r)&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Free AJAX and Silverlight Automated Testing by Telerik</title>
      <link>https://blog.tiagosalgado.com/2009/09/17/free-ajax-and-silverlight-automated-testing-by-telerik/</link>
      <pubDate>Thu, 17 Sep 2009 13:14:23 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2009/09/17/free-ajax-and-silverlight-automated-testing-by-telerik/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.telerik.com/products/webaii-testing-framework.aspx&#34; target=&#34;_blank&#34;&gt;WebAii Testing Framework&lt;/a&gt; helps developers build automated unit tests, functional tests and end to end scenario tests for both AJAX- and Silverlight-powered applications. From automating complex UI actions, waiting on DOM changes to imitating the complete list of UI XAML elements in Silverlight – it’s all in here for free!&lt;/p&gt;

&lt;p&gt;Website: &lt;a href=&#34;http://www.telerik.com/products/webaii-testing-framework.aspx&#34; target=&#34;_blank&#34;&gt;WebAii Testing Framework&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQL Server 2008 Deep Dive</title>
      <link>https://blog.tiagosalgado.com/2009/08/12/sql-server-2008-deep-dive/</link>
      <pubDate>Wed, 12 Aug 2009 12:59:53 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2009/08/12/sql-server-2008-deep-dive/</guid>
      <description>&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;a href=&#34;http://oito.files.wordpress.com/2009/08/image0011.jpg&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-449&#34; title=&#34;sqlserver2k8deepdive&#34; src=&#34;http://oito.files.wordpress.com/2009/08/image0011.jpg&#34; alt=&#34;sqlserver2k8deepdive&#34; width=&#34;590&#34; height=&#34;168&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p style=&#34;text-align:left;&#34;&gt;
  Vai-se realizar dia 10 e 15 de Setembro, em Lisboa e no Porto respectivamente, um evento que aborda principalmente as novas funcionalidades presentes no SQL Server 2008.
&lt;/p&gt;

&lt;p style=&#34;text-align:left;&#34;&gt;
  Resource Governor, Partitioning, Auditing, X-Events são alguns dos temas que irão ser abordados neste evento, mas o programa completo pode ser visto &lt;a href=&#34;http://www.microsoft.com/portugal/sqlserver2008deepdive/default.mspx&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.
&lt;/p&gt;

&lt;p style=&#34;text-align:left;&#34;&gt;
  Podem fazer a inscrição nos seguintes links:
&lt;/p&gt;

&lt;p style=&#34;text-align:left;&#34;&gt;
  &lt;a href=&#34;http://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032423084&amp;Culture=pt-PT&#34; target=&#34;_blank&#34;&gt;Lisboa&lt;/a&gt; &amp;#8211; 10 de Setembro no Auditório Microsoft (TagusPark)
&lt;/p&gt;

&lt;p style=&#34;text-align:left;&#34;&gt;
  &lt;a href=&#34;http://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032423086&amp;Culture=pt-PT&#34; target=&#34;_blank&#34;&gt;Porto&lt;/a&gt; &amp;#8211; 15 de Setembro na Fundação Dr. António Cupertino de Miranda
&lt;/p&gt;

&lt;p style=&#34;text-align:left;&#34;&gt;
  &lt;a href=&#34;http://www.microsoft.com/portugal/sqlserver2008deepdive/default.mspx&#34; target=&#34;_blank&#34;&gt;Programa do Evento&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data Source Configuration Wizard não lista os datasources disponiveis</title>
      <link>https://blog.tiagosalgado.com/2009/07/22/data-source-configuration-wizard-nao-lista-os-datasources-disponiveis/</link>
      <pubDate>Wed, 22 Jul 2009 12:27:58 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2009/07/22/data-source-configuration-wizard-nao-lista-os-datasources-disponiveis/</guid>
      <description>&lt;p&gt;Há uns tempos atrás &lt;a href=&#34;http://forums.asp.net/p/1347741/3304057.aspx#3304057&#34; target=&#34;_blank&#34;&gt;tive um problema&lt;/a&gt; com o meu Visual Studio que, devido ao tempo disponivel para solucionar o problema ter-se esgotado, levou-me a formatar a máquina para voltar tudo à normalidade.&lt;/p&gt;

&lt;p&gt;Ao utilizar o Wizard para criar um Data Source, a listagem dos tipos que teria disponiveis não me estava a aparecer&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://oito.files.wordpress.com/2009/07/data-source-config-wizard-dialog1.jpg&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-442&#34; title=&#34;data-source-config-wizard-dialog[1]&#34; src=&#34;http://oito.files.wordpress.com/2009/07/data-source-config-wizard-dialog1.jpg&#34; alt=&#34;data-source-config-wizard-dialog[1]&#34; width=&#34;499&#34; height=&#34;387&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pelos vistos apareceu mais alguem com o mesmo problema e conseguiu resolver sem a trabalheira de formatar e instalar tudo novamente como podem ver &lt;a href=&#34;http://forums.asp.net/p/1371172/2866696.aspx&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQL Server 2008 Resource Governor</title>
      <link>https://blog.tiagosalgado.com/2009/07/21/sql-server-2008-resource-governor/</link>
      <pubDate>Tue, 21 Jul 2009 12:24:32 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2009/07/21/sql-server-2008-resource-governor/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://oito.files.wordpress.com/2009/07/ee151608-image001en-us1.gif&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-438&#34; title=&#34;sql_server_2008_logo&#34; src=&#34;http://oito.files.wordpress.com/2009/07/ee151608-image001en-us1.gif&#34; alt=&#34;sql_server_2008_logo&#34; width=&#34;363&#34; height=&#34;75&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O Resource Governor é uma funcionalidade adicionado ao SQL Server 2008 que permite-nos gerir a carga e os recursos que irão ser usados em determinada base de dados.&lt;/p&gt;

&lt;p&gt;Muitas vezes, devido a querys mal construidas ou até mesmo por se tratar de operações bastante pesadas, pretendiamos que apenas utiliza-se uma percentagem dos recursos do servidor e deixasse os restantes recursos para outras operações que fossem solicitadas.&lt;/p&gt;

&lt;p&gt;Esta funcionalidade veio resolver isto mesmo, ou seja, podemos agora definir que determinada operação irá apenas usar X% dos recursos e até mesmo indicar quais serão as querys prioritárias.&lt;/p&gt;

&lt;p&gt;Para perceberem melhor como funciona e como configurar, deixo os seguintes links:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb934084.aspx&#34; target=&#34;_blank&#34;&gt;Resource Governor Concepts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb933866.aspx&#34; target=&#34;_blank&#34;&gt;Managing SQL Server Workloads with Resource Governor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ee151608.aspx&#34; target=&#34;_blank&#34;&gt;Using Resource Governor&lt;/a&gt; (&lt;a href=&#34;http://download.microsoft.com/download/D/B/D/DBDE7972-1EB9-470A-BA18-58849DB3EB3B/ResourceGov.docx&#34; target=&#34;_blank&#34;&gt;download white-paper&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Collection was modified; enumeration operation may not execute</title>
      <link>https://blog.tiagosalgado.com/2009/06/17/collection-was-modified-enumeration-operation-may-not-execute/</link>
      <pubDate>Wed, 17 Jun 2009 12:38:34 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2009/06/17/collection-was-modified-enumeration-operation-may-not-execute/</guid>
      <description>&lt;p&gt;Para remover um item de uma colecção, nada mais do que&lt;/p&gt;

&lt;p&gt;List&lt;string&gt; s = new List&lt;string&gt;() { &amp;#8220;1&amp;#8221;, &amp;#8220;2&amp;#8221; };&lt;/p&gt;

&lt;p&gt;s.Remove(&amp;#8220;1&amp;#8221;);&lt;/p&gt;

&lt;p&gt;Mas quando usamos a colecção dentro de um ciclo e queremos remover o item que está carregado actualmente, podemos ser surpreendidos com uma excepção do tipo &amp;#8220;Collection was modified; enumeration operation may not execute&amp;#8221;.&lt;/p&gt;

&lt;p&gt;List&lt;string&gt; s = new List&lt;string&gt;() { &amp;#8220;1&amp;#8221;, &amp;#8220;2&amp;#8221; };&lt;/p&gt;

&lt;p&gt;foreach (string ss in s)&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;s.Remove(ss);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Para contornar este erro, e eliminar todos os items que pretendemos durante o ciclo, basta a seguinte alteração ao código&lt;/p&gt;

&lt;p&gt;List&lt;string&gt; s = new List&lt;string&gt;() { &amp;#8220;1&amp;#8221;, &amp;#8220;2&amp;#8221; };&lt;/p&gt;

&lt;p&gt;foreach (string ss in &lt;strong&gt;new List&lt;string&gt;(s)&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;s.Remove(ss);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ASP.NET MVC 1.0 Final</title>
      <link>https://blog.tiagosalgado.com/2009/03/19/aspnet-mvc-10-final/</link>
      <pubDate>Thu, 19 Mar 2009 23:49:13 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2009/03/19/aspnet-mvc-10-final/</guid>
      <description>&lt;p&gt;Já está disponível para &lt;a href=&#34;http://www.microsoft.com/downloads/details.aspx?FamilyID=53289097-73ce-43bf-b6a6-35e00103cb4b&amp;displaylang=en&#34; target=&#34;_blank&#34;&gt;download&lt;/a&gt; a versão final.&lt;/p&gt;

&lt;p&gt;Para quem quiser começar a usar pode consultar o seguinte tutorial que aborda bem o assunto.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.codeasp.net/articles/asp.net/30/aspnet-mvc-framework-tutorial&#34; target=&#34;_blank&#34;&gt;ASP.NET MVC Framework Tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ou então o &lt;a href=&#34;http://www.asp.net/mvc/&#34; target=&#34;_blank&#34;&gt;site oficial&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Microsoft TechDays Developers 2009 Virtual</title>
      <link>https://blog.tiagosalgado.com/2009/03/16/microsoft-techdays-developers-2009-virtual/</link>
      <pubDate>Mon, 16 Mar 2009 00:30:27 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2009/03/16/microsoft-techdays-developers-2009-virtual/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.msfttechdays.com/&#34;&gt;&lt;img title=&#34;Tech%20Days%20header%20white&#34; style=&#34;border-right:0;border-top:0;display:inline;border-left:0;border-bottom:0;&#34; height=&#34;142&#34; alt=&#34;Tech%20Days%20header%20white&#34; src=&#34;http://oito.files.wordpress.com/2009/03/tech20days20header20white.jpg&#34; width=&#34;916&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dia 1 de Abril (não é mentira 🙂 ) vai decorrer o &lt;a href=&#34;http://www.msfttechdays.com/&#34;&gt;Microsoft TechDays Developers 2009 Virtual&lt;/a&gt;, onde serão transmitidas online 24h de sessões com temas relaccionados com:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows Development and Frameworks&lt;/li&gt;
&lt;li&gt;Windows Mobile Development&lt;/li&gt;
&lt;li&gt;Office and Sharepoint Development&lt;/li&gt;
&lt;li&gt;Developer Tools, Languages &amp;amp; Practices&lt;/li&gt;
&lt;li&gt;Web Development &amp;amp; User Experience&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No site oficial ainda não estão todas as sessões anunciadas, mas já podem ver algumas das 90 que irão fazer parte deste evento.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>