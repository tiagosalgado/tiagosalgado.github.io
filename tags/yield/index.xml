<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yield on tiagosalgado.com</title>
    <link>https://blog.tiagosalgado.com/tags/yield/</link>
    <description>Recent content in Yield on tiagosalgado.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 13 Sep 2008 01:34:39 +0000</lastBuildDate>
    <atom:link href="https://blog.tiagosalgado.com/tags/yield/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>C# yield</title>
      <link>https://blog.tiagosalgado.com/2008/09/13/c-yield/</link>
      <pubDate>Sat, 13 Sep 2008 01:34:39 +0000</pubDate>
      
      <guid>https://blog.tiagosalgado.com/2008/09/13/c-yield/</guid>
      <description>&lt;p&gt;A expressão &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/9k7k7cf0.aspx&#34; target=&#34;_blank&#34;&gt;yield&lt;/a&gt; é bastante útil quando queremos os valores de um método que retorna um &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.collections.ienumerable.aspx&#34; target=&#34;_blank&#34;&gt;IEnumerable&lt;/a&gt; ou &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.collections.ienumerator.aspx&#34; target=&#34;_blank&#34;&gt;IEnumerator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para retornarmos os valores entre o intervalo passado como parâmetro no método GetValuesFromInterval() teriamos algo assim:&lt;/p&gt;

&lt;pre&gt;&lt;font color=&#34;#0000ff&#34;&gt;static&lt;/font&gt; IEnumerable&amp;lt;&lt;span style=&#34;color:#0000ff;&#34;&gt;int&lt;/span&gt;&amp;gt; GetValuesFromInterval(&lt;span style=&#34;color:#0000ff;&#34;&gt;int&lt;/span&gt; min, &lt;span style=&#34;color:#0000ff;&#34;&gt;int&lt;/span&gt; max)
{
        List&amp;lt;&lt;span style=&#34;color:#0000ff;&#34;&gt;int&lt;/span&gt;&amp;gt; intervalo = &lt;span style=&#34;color:#0000ff;&#34;&gt;new&lt;/span&gt; List&amp;lt;&lt;span style=&#34;color:#0000ff;&#34;&gt;int&lt;/span&gt;&amp;gt;();
        &lt;span style=&#34;color:#0000ff;&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#0000ff;&#34;&gt;int&lt;/span&gt; i = min+1; i &amp;lt; max; i++)
        {
                intervalo.Add(i);
        }
        &lt;span style=&#34;color:#0000ff;&#34;&gt;return&lt;/span&gt; intervalo;
}&lt;/pre&gt;

&lt;p&gt;Neste exemplo, para retornarmos todos os valores precisamos de criar um &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/6sh2ey19.aspx&#34; target=&#34;_blank&#34;&gt;List&lt;/a&gt; e adicionar todos os nºs do intervalo que indicamos, e por fim retornarmos o &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/6sh2ey19.aspx&#34; target=&#34;_blank&#34;&gt;List&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Com a expressão &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/9k7k7cf0.aspx&#34; target=&#34;_blank&#34;&gt;yield&lt;/a&gt; deixamos de precisar de criar um &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/6sh2ey19.aspx&#34; target=&#34;_blank&#34;&gt;List&lt;/a&gt; e ficamos com o código bastante mais elegante.&lt;/p&gt;

&lt;pre&gt;&lt;span style=&#34;color:#0000ff;&#34;&gt;static&lt;/span&gt; IEnumerable&amp;lt;&lt;span style=&#34;color:#0000ff;&#34;&gt;int&lt;/span&gt;&amp;gt; GetValuesFromInterval(&lt;span style=&#34;color:#0000ff;&#34;&gt;int&lt;/span&gt; min, &lt;span style=&#34;color:#0000ff;&#34;&gt;int&lt;/span&gt; max)
{
        &lt;span style=&#34;color:#0000ff;&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#0000ff;&#34;&gt;int&lt;/span&gt; i = min + 1; i &amp;lt; max; i++)
        {
                yield &lt;span style=&#34;color:#0000ff;&#34;&gt;return&lt;/span&gt; i;
        }
}&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>